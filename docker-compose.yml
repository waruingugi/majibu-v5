version: '3.9'
services:
  db:
    image: postgres:12
    container_name: postgres-db-server
    networks:
      - majibu-backend-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - ./db:/data
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis
    container_name: redis-server
    networks:
      - majibu-backend-network
    restart: always
    ports:
      - '6379:6379'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.prod
    image: majibu
    command: sh -c "alembic upgrade head && uvicorn usgi:app --reload --host 0.0.0.0 --port 9000"
    networks:
      - majibu-backend-network
    container_name: majibu-server
    restart: always
    volumes:
      - .:/majibu
    ports:
      - '9000:9000'
    depends_on:
      - db
      - redis

  celery_worker:
    build: .
    networks:
      - majibu-backend-network
    command: celery -A app.worker worker -Q scheduler-queue -l info
    env_file:
      - .env.prod
    volumes:
      - .:/majibu
    depends_on:
      - app
      - redis

  celery_beat:
    build: .
    networks:
      - majibu-backend-network
    command: celery -A app.worker beat
    env_file:
      - .env.prod
    volumes:
      - .:/majibu
    depends_on:
      - app
      - redis

volumes:
  db_data:

networks:
  majibu-backend-network:
    name: majibu-backend-network
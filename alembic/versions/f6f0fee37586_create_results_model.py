"""Create results model

Revision ID: f6f0fee37586
Revises: 31e8d4d504ba
Create Date: 2023-06-15 21:30:27.600834

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f6f0fee37586"
down_revision = "31e8d4d504ba"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "results",
        sa.Column("user_id", sa.String(), nullable=True),
        sa.Column("session_id", sa.String(), nullable=True),
        sa.Column(
            "percentage",
            sa.Float(asdecimal=True, decimal_return_scale=7),
            server_default=sa.text("0.0"),
            nullable=True,
            comment="The total based on how they answered questions",
        ),
        sa.Column(
            "total_answered",
            sa.Integer(),
            nullable=True,
            comment="Number of total answered questions",
        ),
        sa.Column(
            "speed",
            sa.Float(asdecimal=True, decimal_return_scale=7),
            server_default=sa.text("0.0"),
            nullable=True,
            comment="The total of how fast the user is during the session",
        ),
        sa.Column(
            "time_taken",
            sa.Float(asdecimal=True, decimal_return_scale=7),
            server_default=sa.text("0.0"),
            nullable=True,
            comment="Time taken to play the session(that is, to answer questions) in milliseconds",
        ),
        sa.Column(
            "score",
            sa.Float(asdecimal=True, decimal_return_scale=7),
            server_default=sa.text("0.0"),
            nullable=True,
            comment="The total marks based on all weights, formula and other criteria. This what is shown to the user",
        ),
        sa.Column(
            "expires_at",
            sa.DateTime(),
            nullable=False,
            comment="When the session expires and is no longer available to the user",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=True,
            comment="If these results can be used to create pair with another user",
        ),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["session_id"], ["sessions.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("results")
    # ### end Alembic commands ###
